name: Gauge UI Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  test:
    name: Run Gauge Tests
    runs-on: ubuntu-20.04  # 使用稳定的LTS版本
    
    steps:
      - name: Check out code
        uses: actions/checkout@v2  # 使用稳定的v2版本
      
      - name: Set up Python
        uses: actions/setup-python@v2  # 使用稳定的v2版本
        with:
          python-version: '3.9'  # 使用更稳定的Python版本
          
      # 缓存pip依赖
      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
          
      - name: Install Gauge
        run: |
          curl -SsL https://downloads.gauge.org/stable | sh
          echo "PATH=$HOME/.gauge:$PATH" >> $GITHUB_ENV
          gauge --version
          gauge telemetry off
          gauge install python
          gauge install screenshot
          gauge install html-report
        
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # 缓存Playwright浏览器
      - name: Cache Playwright browsers
        uses: actions/cache@v2
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
            
      - name: Install Playwright
        run: |
          pip install playwright
          # 只有当缓存未命中时才需要安装浏览器
          python -m playwright install --with-deps chromium
          
      - name: Prepare test environment
        run: |
          mkdir -p screenshots logs reports
          # 确保所有测试目录存在
          echo "测试环境准备完成，时间: $(date)"
        
      - name: Run tests
        id: run_tests
        continue-on-error: true  # 即使测试失败也继续执行工作流
        run: |
          gauge run specs/ --env ci
          echo "GAUGE_EXIT_CODE=$?" >> $GITHUB_ENV
        env:
          HEADLESS: true
          BROWSER: chromium
          MAXIMIZED: true
          
      - name: Upload reports
        uses: actions/upload-artifact@v2
        if: always()  
        with:
          name: test-reports
          path: |
            reports/
            logs/
            screenshots/
          retention-days: 7